{"ast":null,"code":"var _jsxFileName = \"/Users/mz01-chinh/Desktop/reactjs-base-21-main/src/features/Product/pages/ListPage.jsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Container, Grid, LinearProgress, makeStyles, Paper } from '@material-ui/core';\nimport Pagination from '@material-ui/lab/Pagination';\nimport queryString from 'query-string';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport categoryApi from '../../../api/categoryApi';\nimport productApi from '../../../api/productApi';\nimport FilterViewer from '../components/FilterViewer';\nimport ProductFilters from '../components/ProductFilters';\nimport ProductList from '../components/ProductList';\nimport ProductSkeletonList from '../components/ProductSkeletonList';\nimport ProductSort from '../components/ProductSort';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  left: {\n    width: \"250px\"\n  },\n  right: {\n    flex: '1 1 0'\n  },\n  pagination: {\n    display: \"flex\",\n    flexFlow: \"row nowrap\",\n    justifyContent: \"center\",\n    marginTop: \"20px\",\n    paddingBottom: \"20px\"\n  }\n}));\nListPage.propTypes = {};\n\nfunction ListPage(props) {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const location = useLocation();\n  const queryParams = queryString.parse(location.search); // const queryParams = useMemo(() => {\n  //     const params = queryString.parse(location.search);\n  //     return {\n  //         ...params,\n  //         _page: Number.parseInt(params._page) ||  1,\n  //         _limit: Number.parseInt(params._limit) ||  12,\n  //         _sort: params._sort || 'salePrice:ASC',\n  //         isPromotion: params.isPromotion === \"true\",\n  //         isFreeShip: params.isFreeShip === \"true\",\n  //     }\n  // }, [location.search])\n\n  const [categoryList, setCategoryList] = useState([]);\n  const [loadingCategory, setLoadingCategory] = useState(true);\n  const [productList, setProductList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [pagination, setPagination] = useState({\n    limit: 12,\n    total: 10,\n    page: 1\n  });\n  const [filters, setFilters] = useState(() => ({ ...queryParams,\n    _page: Number.parseInt(queryParams._page) || 1,\n    _limit: Number.parseInt(queryParams._limit) || 12,\n    _sort: queryParams._sort || 'salePrice:ASC'\n  }));\n  useEffect(() => {\n    ;\n\n    (async () => {\n      try {\n        const response = await categoryApi.getAll();\n        setCategoryList(response.map(x => ({\n          id: x.id,\n          name: x.name\n        })));\n        setLoadingCategory(false);\n      } catch (error) {\n        console.log(\"Fail to featch\");\n      }\n    })();\n  }, []);\n  useEffect(() => {\n    ;\n\n    (async () => {\n      try {\n        const response = await productApi.getAll(filters);\n        setProductList(response.data);\n        setPagination(response.pagination);\n      } catch (error) {\n        console.log(error);\n      }\n\n      setLoading(false);\n    })();\n  }, [filters]);\n  useEffect(() => {\n    ;\n\n    (async () => {\n      try {\n        const response = await productApi.getAll(filters);\n        setProductList(response.data);\n        setPagination(response.pagination);\n      } catch (error) {\n        console.log(error);\n      }\n\n      setLoading(false);\n    })();\n  }, [filters]);\n  useEffect(() => {\n    history.push({\n      pathname: history.location.pathname,\n      search: queryString.stringify(filters)\n    });\n  }, [history, filters]);\n\n  const handlePageChange = (e, page) => {\n    setFilters(prevFilters => ({ ...prevFilters,\n      _page: page\n    })); // const filters = {\n    //     ...queryParams,\n    //     _page: page,\n    // }\n    // history.push({\n    //     pathname: history.location.pathname,\n    //     search: queryString.stringify(filters),\n    // })\n  };\n\n  const handleSortChange = newSortValue => {\n    setFilters(prevFilters => ({ ...prevFilters,\n      _sort: newSortValue\n    })); // const filters = {\n    //     ...queryParams,\n    //     _sort: newSortValue,\n    // }\n    // history.push({\n    //     pathname: history.location.pathname,\n    //     search: queryString.stringify(filters),\n    // })\n  };\n\n  const handleFiltersChange = newFilters => {\n    setFilters(prevFilters => ({ ...prevFilters,\n      ...newFilters\n    })); // const filters = {\n    //     ...queryParams,\n    //     ...newFilters,\n    // }\n    // history.push({\n    //     pathname: history.location.pathname,\n    //     search: queryString.stringify(filters),\n    // })\n  };\n\n  const setNewFilters = newFilters => {\n    setFilters(newFilters); // const filters = {\n    //     ...queryParams,\n    //     ...newFilters,\n    // }\n    // history.push({\n    //     pathname: history.location.pathname,\n    //     search: queryString.stringify(filters),\n    // })\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 1,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            className: classes.left,\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 0,\n              children: [loadingCategory && /*#__PURE__*/_jsxDEV(LinearProgress, {\n                className: classes.linearProgress,\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 53\n              }, this), /*#__PURE__*/_jsxDEV(ProductFilters, {\n                filters: filters,\n                onChange: handleFiltersChange,\n                categoryList: categoryList\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            className: classes.right,\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 0,\n              children: [loading && /*#__PURE__*/_jsxDEV(LinearProgress, {\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(ProductSort, {\n                currentSort: filters._sort,\n                onChange: handleSortChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FilterViewer, {\n                filters: filters,\n                onChange: setNewFilters,\n                categoryList: categoryList\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 33\n              }, this), loading ? /*#__PURE__*/_jsxDEV(ProductSkeletonList, {\n                length: 12\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 44\n              }, this) : /*#__PURE__*/_jsxDEV(ProductList, {\n                data: productList\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 82\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                className: classes.pagination,\n                children: /*#__PURE__*/_jsxDEV(Pagination, {\n                  count: Math.ceil(pagination.total / pagination.limit),\n                  color: \"primary\",\n                  page: pagination.page,\n                  onChange: (e, page) => handlePageChange(e, page)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ListPage, \"l3SZhrjJZcA1Eqa6uF8EgX2SNPk=\", false, function () {\n  return [useStyles, useHistory, useLocation];\n});\n\n_c = ListPage;\nexport default ListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListPage\");","map":{"version":3,"sources":["/Users/mz01-chinh/Desktop/reactjs-base-21-main/src/features/Product/pages/ListPage.jsx"],"names":["Box","Container","Grid","LinearProgress","makeStyles","Paper","Pagination","queryString","React","useEffect","useState","useHistory","useLocation","categoryApi","productApi","FilterViewer","ProductFilters","ProductList","ProductSkeletonList","ProductSort","useStyles","theme","root","left","width","right","flex","pagination","display","flexFlow","justifyContent","marginTop","paddingBottom","ListPage","propTypes","props","classes","history","location","queryParams","parse","search","categoryList","setCategoryList","loadingCategory","setLoadingCategory","productList","setProductList","loading","setLoading","setPagination","limit","total","page","filters","setFilters","_page","Number","parseInt","_limit","_sort","response","getAll","map","x","id","name","error","console","log","data","push","pathname","stringify","handlePageChange","e","prevFilters","handleSortChange","newSortValue","handleFiltersChange","newFilters","setNewFilters","linearProgress","Math","ceil"],"mappings":"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","sourcesContent":["import { Box, Container, Grid, LinearProgress, makeStyles, Paper } from '@material-ui/core';\nimport Pagination from '@material-ui/lab/Pagination';\nimport queryString from 'query-string';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport categoryApi from '../../../api/categoryApi';\nimport productApi from '../../../api/productApi';\nimport FilterViewer from '../components/FilterViewer';\nimport ProductFilters from '../components/ProductFilters';\nimport ProductList from '../components/ProductList';\nimport ProductSkeletonList from '../components/ProductSkeletonList';\nimport ProductSort from '../components/ProductSort';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n\n    },\n    left: {\n        width: \"250px\",\n    },\n    right: {\n        flex: '1 1 0',\n    },\n    pagination: {\n        display: \"flex\",\n        flexFlow: \"row nowrap\",\n        justifyContent: \"center\",\n        marginTop: \"20px\",\n        paddingBottom: \"20px\",\n\n    }\n}))\n\nListPage.propTypes = {\n\n};\n\nfunction ListPage(props) {\n    const classes = useStyles();\n    const history = useHistory();\n    const location = useLocation();\n    const queryParams = queryString.parse(location.search)\n    // const queryParams = useMemo(() => {\n    //     const params = queryString.parse(location.search);\n    //     return {\n    //         ...params,\n    //         _page: Number.parseInt(params._page) ||  1,\n    //         _limit: Number.parseInt(params._limit) ||  12,\n    //         _sort: params._sort || 'salePrice:ASC',\n    //         isPromotion: params.isPromotion === \"true\",\n    //         isFreeShip: params.isFreeShip === \"true\",\n    //     }\n    // }, [location.search])\n    const [categoryList, setCategoryList] = useState([]);\n    const [loadingCategory, setLoadingCategory] = useState(true)\n    const [productList, setProductList] = useState([])\n    const [loading, setLoading] = useState(true);\n    const [pagination, setPagination] = useState({\n        limit: 12,\n        total: 10,\n        page: 1,\n    })\n\n    const [filters, setFilters] = useState(() => ({\n        ...queryParams,\n        _page: Number.parseInt(queryParams._page) || 1,\n        _limit: Number.parseInt(queryParams._limit) || 12,\n        _sort: queryParams._sort || 'salePrice:ASC'\n    }));\n\n    useEffect(() => {\n        ; (async () => {\n            try {\n                const response = await categoryApi.getAll();\n                setCategoryList(response.map((x) => ({\n                    id: x.id,\n                    name: x.name,\n                })))\n                setLoadingCategory(false)\n            } catch (error) {\n                console.log(\"Fail to featch\")\n            }\n        })()\n    }, [])\n\n    useEffect(() => {\n        ; (async () => {\n            try {\n                const response = await productApi.getAll(filters);\n                setProductList(response.data)\n                setPagination(response.pagination)\n            } catch (error) {\n                console.log(error)\n            }\n            setLoading(false)\n        })();\n    }, [filters])\n\n    useEffect(() => {\n        ; (async () => {\n            try {\n                const response = await productApi.getAll(filters);\n                setProductList(response.data)\n                setPagination(response.pagination)\n            } catch (error) {\n                console.log(error)\n            }\n            setLoading(false)\n        })();\n    }, [filters])\n\n    useEffect(() => {\n        history.push({\n            pathname: history.location.pathname,\n            search: queryString.stringify(filters),\n        })\n    }, [history, filters])\n\n\n    const handlePageChange = (e, page) => {\n        setFilters(prevFilters => ({\n            ...prevFilters,\n            _page: page,\n        }))\n\n        // const filters = {\n        //     ...queryParams,\n        //     _page: page,\n        // }\n        // history.push({\n        //     pathname: history.location.pathname,\n        //     search: queryString.stringify(filters),\n        // })\n    }\n\n    const handleSortChange = (newSortValue) => {\n        setFilters(prevFilters => ({\n            ...prevFilters,\n            _sort: newSortValue,\n        }))\n\n        // const filters = {\n        //     ...queryParams,\n        //     _sort: newSortValue,\n        // }\n\n        // history.push({\n        //     pathname: history.location.pathname,\n        //     search: queryString.stringify(filters),\n        // })\n    }\n\n    const handleFiltersChange = (newFilters) => {\n        setFilters(prevFilters => ({\n            ...prevFilters,\n            ...newFilters,\n        }))\n\n        // const filters = {\n        //     ...queryParams,\n        //     ...newFilters,\n        // }\n\n        // history.push({\n        //     pathname: history.location.pathname,\n        //     search: queryString.stringify(filters),\n        // })\n    }\n\n    const setNewFilters = (newFilters) => {\n        setFilters(newFilters)\n        // const filters = {\n        //     ...queryParams,\n        //     ...newFilters,\n        // }\n        // history.push({\n        //     pathname: history.location.pathname,\n        //     search: queryString.stringify(filters),\n        // })\n    }\n\n\n    return (\n        <div>\n            <Box>\n                <Container>\n                    <Grid container spacing={1}>\n                        <Grid className={classes.left} item>\n                            <Paper elevation={0} >\n                                {loadingCategory && <LinearProgress className={classes.linearProgress} color=\"primary\" />}\n                                <ProductFilters filters={filters} onChange={handleFiltersChange} categoryList={categoryList} />\n                            </Paper>\n                        </Grid>\n                        <Grid className={classes.right} item>\n                            <Paper elevation={0} >\n                                {loading && <LinearProgress color=\"primary\"/>}\n                                <ProductSort currentSort={filters._sort} onChange={handleSortChange} />\n                                <FilterViewer filters={filters} onChange={setNewFilters} categoryList={categoryList} />\n                                {loading ? <ProductSkeletonList length={12} /> : <ProductList data={productList} />}\n                                <Box className={classes.pagination}>\n                                    <Pagination\n                                        count={Math.ceil(pagination.total / pagination.limit)}\n                                        color=\"primary\"\n                                        page={pagination.page}\n                                        onChange={(e, page) => handlePageChange(e, page)}\n                                    />\n                                </Box>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Container>\n            </Box>\n        </div>\n    );\n}\n\nexport default ListPage;"]},"metadata":{},"sourceType":"module"}