{"ast":null,"code":"var _jsxFileName = \"/Users/mz01-chinh/Desktop/reactjs-base-21-main/src/components/form-control/InputField/index.jsx\";\nimport { TextField } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Controller } from \"react-hook-form\";\nimport { FormHelperText } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nInputField.propTypes = {\n  form: PropTypes.object.isRequired,\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  disabled: PropTypes.bool\n};\n\nfunction InputField(props) {\n  var _errors$name;\n\n  const {\n    form,\n    name,\n    label,\n    disabled\n  } = props;\n  const {\n    formState: {\n      errors\n    }\n  } = form;\n  const hasError = errors[name];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Controller, {\n      control: form.control,\n      name: name,\n      render: ({\n        field\n      }) => /*#__PURE__*/_jsxDEV(TextField, { ...field,\n        fullWidth: true,\n        margin: \"normal\",\n        variant: \"outlined\",\n        label: label,\n        disabled: disabled,\n        error: !!hasError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n      error: !!hasError,\n      children: (_errors$name = errors[name]) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_c = InputField;\nexport default InputField;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputField\");","map":{"version":3,"sources":["/Users/mz01-chinh/Desktop/reactjs-base-21-main/src/components/form-control/InputField/index.jsx"],"names":["TextField","PropTypes","React","Controller","FormHelperText","InputField","propTypes","form","object","isRequired","name","string","label","disabled","bool","props","formState","errors","hasError","control","field","message"],"mappings":";AAAA,SAASA,SAAT,QAA0B,mBAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,cAAT,QAA+B,mBAA/B;;AAIAC,UAAU,CAACC,SAAX,GAAuB;AACnBC,EAAAA,IAAI,EAAEN,SAAS,CAACO,MAAV,CAAiBC,UADJ;AAEnBC,EAAAA,IAAI,EAAET,SAAS,CAACU,MAAV,CAAiBF,UAFJ;AAGnBG,EAAAA,KAAK,EAAEX,SAAS,CAACU,MAHE;AAInBE,EAAAA,QAAQ,EAAEZ,SAAS,CAACa;AAJD,CAAvB;;AAOA,SAAST,UAAT,CAAoBU,KAApB,EAA2B;AAAA;;AAEvB,QAAM;AAAER,IAAAA,IAAF;AAAQG,IAAAA,IAAR;AAAcE,IAAAA,KAAd;AAAqBC,IAAAA;AAArB,MAAkCE,KAAxC;AACA,QAAM;AAAEC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAAb,MAA4BV,IAAlC;AACA,QAAMW,QAAQ,GAAGD,MAAM,CAACP,IAAD,CAAvB;AAEA,sBACI;AAAA,4BACI,QAAC,UAAD;AACI,MAAA,OAAO,EAAEH,IAAI,CAACY,OADlB;AAEI,MAAA,IAAI,EAAET,IAFV;AAGI,MAAA,MAAM,EAAE,CAAC;AAAEU,QAAAA;AAAF,OAAD,kBACJ,QAAC,SAAD,OACQA,KADR;AAEI,QAAA,SAAS,MAFb;AAGI,QAAA,MAAM,EAAC,QAHX;AAII,QAAA,OAAO,EAAC,UAJZ;AAKI,QAAA,KAAK,EAAER,KALX;AAMI,QAAA,QAAQ,EAAEC,QANd;AAOI,QAAA,KAAK,EAAE,CAAC,CAACK;AAPb;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,YADJ,eAgBI,QAAC,cAAD;AAAgB,MAAA,KAAK,EAAE,CAAC,CAACA,QAAzB;AAAA,gCACKD,MAAM,CAACP,IAAD,CADX,iDACK,aAAcW;AADnB;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH;;KA5BQhB,U;AA8BT,eAAeA,UAAf","sourcesContent":["import { TextField } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Controller } from \"react-hook-form\";\nimport { FormHelperText } from '@material-ui/core';\n\n\n\nInputField.propTypes = {\n    form: PropTypes.object.isRequired,\n    name: PropTypes.string.isRequired,\n    label: PropTypes.string,\n    disabled: PropTypes.bool,\n};\n\nfunction InputField(props) {\n\n    const { form, name, label, disabled } = props\n    const { formState: { errors } } = form\n    const hasError = errors[name]\n\n    return (\n        <div>\n            <Controller\n                control={form.control}\n                name={name}\n                render={({ field }) => (\n                    <TextField\n                        {...field}\n                        fullWidth\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        label={label}\n                        disabled={disabled}\n                        error={!!hasError}\n                    />\n                )}\n            />\n            <FormHelperText error={!!hasError}>\n                {errors[name]?.message}\n            </FormHelperText>\n        </div>\n    );\n}\n\nexport default InputField;"]},"metadata":{},"sourceType":"module"}