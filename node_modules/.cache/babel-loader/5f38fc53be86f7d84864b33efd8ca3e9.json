{"ast":null,"code":"var _jsxFileName = \"/Users/mz01-chinh/Desktop/reactjs-base-21-main/src/features/Auth/components/Login/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { unwrapResult } from '@reduxjs/toolkit';\nimport { useSnackbar } from 'notistack';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../../userSlice';\nimport LoginForm from '../LoginForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nLogin.propTypes = {\n  closeDialog: PropTypes.func\n};\n\nfunction Login(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n\n  const showNoti = (message, variant) => {\n    enqueueSnackbar(message, {\n      variant: variant\n    });\n  };\n\n  const handleSubmit = async values => {\n    try {\n      const action = login(values);\n      const resultAction = await dispatch(action);\n      const user = unwrapResult(resultAction); //close Dia log\n\n      const {\n        closeDialog\n      } = props;\n\n      if (closeDialog) {\n        closeDialog();\n      } //do something here when register success\n\n\n      console.log(user);\n    } catch (error) {\n      showNoti(error.message, \"error\");\n      console.log(\"error: \", error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(LoginForm, {\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"gFW77LDw5/uCs1KR8orr0ERSFsY=\", false, function () {\n  return [useDispatch, useSnackbar];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/mz01-chinh/Desktop/reactjs-base-21-main/src/features/Auth/components/Login/index.jsx"],"names":["unwrapResult","useSnackbar","PropTypes","React","useDispatch","login","LoginForm","Login","propTypes","closeDialog","func","props","dispatch","enqueueSnackbar","showNoti","message","variant","handleSubmit","values","action","resultAction","user","console","log","error"],"mappings":";;;AAAA,SAASA,YAAT,QAA6B,kBAA7B;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,OAAOC,SAAP,MAAsB,cAAtB;;AAGAC,KAAK,CAACC,SAAN,GAAkB;AACdC,EAAAA,WAAW,EAAEP,SAAS,CAACQ;AADT,CAAlB;;AAIA,SAASH,KAAT,CAAeI,KAAf,EAAsB;AAAA;;AAElB,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AAEA,QAAM;AAAES,IAAAA;AAAF,MAAsBZ,WAAW,EAAvC;;AAEA,QAAMa,QAAQ,GAAG,CAACC,OAAD,EAAUC,OAAV,KAAsB;AACnCH,IAAAA,eAAe,CAACE,OAAD,EAAU;AAAEC,MAAAA,OAAO,EAAEA;AAAX,KAAV,CAAf;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAG,MAAOC,MAAP,IAAkB;AACnC,QAAI;AACA,YAAMC,MAAM,GAAGd,KAAK,CAACa,MAAD,CAApB;AACA,YAAME,YAAY,GAAG,MAAMR,QAAQ,CAACO,MAAD,CAAnC;AACA,YAAME,IAAI,GAAGrB,YAAY,CAACoB,YAAD,CAAzB,CAHA,CAKA;;AACA,YAAM;AAACX,QAAAA;AAAD,UAAgBE,KAAtB;;AACA,UAAGF,WAAH,EAAe;AACXA,QAAAA,WAAW;AACd,OATD,CAUA;;;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,KAZD,CAYE,OAAOG,KAAP,EAAc;AACZV,MAAAA,QAAQ,CAACU,KAAK,CAACT,OAAP,EAAgB,OAAhB,CAAR;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBC,KAAvB;AACH;AACJ,GAjBD;;AAmBA,sBACI;AAAA,2BACI,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAEP;AAArB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAlCQV,K;UAEYH,W,EAEWH,W;;;KAJvBM,K;AAoCT,eAAeA,KAAf","sourcesContent":["import { unwrapResult } from '@reduxjs/toolkit';\nimport { useSnackbar } from 'notistack';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../../userSlice';\nimport LoginForm from '../LoginForm';\n\n\nLogin.propTypes = {\n    closeDialog: PropTypes.func\n};\n\nfunction Login(props) {\n\n    const dispatch = useDispatch();\n\n    const { enqueueSnackbar } = useSnackbar();\n\n    const showNoti = (message, variant) => {\n        enqueueSnackbar(message, { variant: variant })\n    }\n\n    const handleSubmit = async (values) => {\n        try {\n            const action = login(values)\n            const resultAction = await dispatch(action);\n            const user = unwrapResult(resultAction);\n\n            //close Dia log\n            const {closeDialog} = props;\n            if(closeDialog){\n                closeDialog()\n            }\n            //do something here when register success\n            console.log(user)\n        } catch (error) {\n            showNoti(error.message, \"error\");\n            console.log(\"error: \", error)\n        }\n    }\n\n    return (\n        <div>\n            <LoginForm onSubmit={handleSubmit} />\n        </div>\n    );\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}