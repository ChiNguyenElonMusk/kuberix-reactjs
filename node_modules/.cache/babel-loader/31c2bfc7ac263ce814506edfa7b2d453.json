{"ast":null,"code":"var _jsxFileName = \"/Users/mz01-chinh/Desktop/reactjs-base-21-main/src/components/form-control/PasswordField/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { FormHelperText } from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport React, { useState } from 'react';\nimport { Controller } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nPasswordField.propTypes = {};\n\nfunction PasswordField(props) {\n  _s();\n\n  var _errors$name2;\n\n  const {\n    form,\n    name,\n    label,\n    disabled\n  } = props;\n  const {\n    formState: {\n      errors\n    }\n  } = form;\n  const hasError = errors[name];\n  const [showPassword, setShowPassword] = useState(false);\n\n  const toggleShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      error: !!hasError,\n      variant: \"outlined\",\n      margin: \"normal\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: name,\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        control: form.control,\n        name: name,\n        render: ({\n          field\n        }) => {\n          var _errors$name;\n\n          return /*#__PURE__*/_jsxDEV(OutlinedInput, { ...field,\n            id: name,\n            type: showPassword ? 'text' : 'password',\n            label: label,\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"toggle password visibility\",\n                onClick: toggleShowPassword,\n                edge: \"end\",\n                children: showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 57\n                }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 74\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 33\n            }, this),\n            disabled: disabled,\n            error: !!hasError,\n            helperText: (_errors$name = errors[name]) === null || _errors$name === void 0 ? void 0 : _errors$name.message,\n            labelWidth: 70\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n        children: (_errors$name2 = errors[name]) === null || _errors$name2 === void 0 ? void 0 : _errors$name2.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PasswordField, \"daguiRHWMFkqPgCh/ppD7CF5VuQ=\");\n\n_c = PasswordField;\nexport default PasswordField;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordField\");","map":{"version":3,"sources":["/Users/mz01-chinh/Desktop/reactjs-base-21-main/src/components/form-control/PasswordField/index.jsx"],"names":["FormHelperText","FormControl","IconButton","InputAdornment","InputLabel","OutlinedInput","Visibility","VisibilityOff","React","useState","Controller","PasswordField","propTypes","props","form","name","label","disabled","formState","errors","hasError","showPassword","setShowPassword","toggleShowPassword","control","field","message"],"mappings":";;;AAAA,SAASA,cAAT,QAA+B,mBAA/B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,iBAA3B;;AAEAC,aAAa,CAACC,SAAd,GAA0B,EAA1B;;AAIA,SAASD,aAAT,CAAuBE,KAAvB,EAA8B;AAAA;;AAAA;;AAE1B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,IAAR;AAAcC,IAAAA,KAAd;AAAqBC,IAAAA;AAArB,MAAkCJ,KAAxC;AACA,QAAM;AAAEK,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAAb,MAA4BL,IAAlC;AACA,QAAMM,QAAQ,GAAGD,MAAM,CAACJ,IAAD,CAAvB;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMc,kBAAkB,GAAG,MAAM;AAC7BD,IAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACH,GAFD;;AAIA,sBACI;AAAA,2BACI,QAAC,WAAD;AAAc,MAAA,KAAK,EAAE,CAAC,CAACD,QAAvB;AAAiC,MAAA,OAAO,EAAC,UAAzC;AAAoD,MAAA,MAAM,EAAC,QAA3D;AAAoE,MAAA,SAAS,MAA7E;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAEL,IAArB;AAAA,kBAA4BC;AAA5B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AACI,QAAA,OAAO,EAAEF,IAAI,CAACU,OADlB;AAEI,QAAA,IAAI,EAAET,IAFV;AAGI,QAAA,MAAM,EAAE,CAAC;AAAEU,UAAAA;AAAF,SAAD;AAAA;;AAAA,8BACJ,QAAC,aAAD,OACQA,KADR;AAEI,YAAA,EAAE,EAAEV,IAFR;AAGI,YAAA,IAAI,EAAEM,YAAY,GAAG,MAAH,GAAY,UAHlC;AAII,YAAA,KAAK,EAAEL,KAJX;AAKI,YAAA,YAAY,eACR,QAAC,cAAD;AAAgB,cAAA,QAAQ,EAAC,KAAzB;AAAA,qCACI,QAAC,UAAD;AACI,8BAAW,4BADf;AAEI,gBAAA,OAAO,EAAEO,kBAFb;AAGI,gBAAA,IAAI,EAAC,KAHT;AAAA,0BAKKF,YAAY,gBAAG,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,wBAAH,gBAAoB,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AALrC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBANR;AAgBI,YAAA,QAAQ,EAAEJ,QAhBd;AAiBI,YAAA,KAAK,EAAE,CAAC,CAACG,QAjBb;AAkBI,YAAA,UAAU,kBAAED,MAAM,CAACJ,IAAD,CAAR,iDAAE,aAAcW,OAlB9B;AAmBI,YAAA,UAAU,EAAE;AAnBhB;AAAA;AAAA;AAAA;AAAA,kBADI;AAAA;AAHZ;AAAA;AAAA;AAAA;AAAA,cAFJ,eA6BI,QAAC,cAAD;AAAA,mCACKP,MAAM,CAACJ,IAAD,CADX,kDACK,cAAcW;AADnB;AAAA;AAAA;AAAA;AAAA,cA7BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAqCH;;GAhDQf,a;;KAAAA,a;AAkDT,eAAeA,aAAf","sourcesContent":["import { FormHelperText } from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport React, { useState } from 'react';\nimport { Controller } from \"react-hook-form\";\n\nPasswordField.propTypes = {\n\n};\n\nfunction PasswordField(props) {\n\n    const { form, name, label, disabled } = props\n    const { formState: { errors } } = form\n    const hasError = errors[name]\n    const [showPassword, setShowPassword] = useState(false)\n\n    const toggleShowPassword = () => {\n        setShowPassword(!showPassword)\n    }\n\n    return (\n        <div>\n            <FormControl  error={!!hasError} variant=\"outlined\" margin=\"normal\" fullWidth>\n                <InputLabel htmlFor={name}>{label}</InputLabel>\n                <Controller\n                    control={form.control}\n                    name={name}\n                    render={({ field }) => (\n                        <OutlinedInput\n                            {...field}\n                            id={name}\n                            type={showPassword ? 'text' : 'password'}\n                            label={label}\n                            endAdornment={\n                                <InputAdornment position=\"end\">\n                                    <IconButton\n                                        aria-label=\"toggle password visibility\"\n                                        onClick={toggleShowPassword}\n                                        edge=\"end\"\n                                    >\n                                        {showPassword ? <Visibility /> : <VisibilityOff />}\n                                    </IconButton>\n                                </InputAdornment>\n                            }\n                            disabled={disabled}\n                            error={!!hasError}\n                            helperText={errors[name]?.message}\n                            labelWidth={70}\n                        />\n                    )}\n                />\n                <FormHelperText>\n                    {errors[name]?.message}\n                </FormHelperText>\n            </FormControl>\n        </div>\n    );\n}\n\nexport default PasswordField;"]},"metadata":{},"sourceType":"module"}