{"ast":null,"code":"var _jsxFileName = \"/Users/mz01-chinh/Desktop/reactjs-base-21-main/src/components/form-control/QuantityField/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { Box, FormHelperText, IconButton, makeStyles } from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport AddCircleOutline from '@material-ui/icons/AddCircleOutline';\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\nimport React from 'react';\nimport { Controller } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  box: {\n    display: \"flex\",\n    flexFlow: \"row nowrap\",\n    alignItems: \"center\",\n    maxWidth: \"250px\"\n  }\n}));\n\nfunction QuantityField(props) {\n  _s();\n\n  var _errors$name2;\n\n  const {\n    form,\n    name,\n    label,\n    disabled\n  } = props;\n  const {\n    formState: {\n      errors\n    },\n    setValue\n  } = form;\n  const hasError = errors[name];\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      error: !!hasError,\n      variant: \"outlined\",\n      margin: \"normal\",\n      fullWidth: true,\n      size: \"small\",\n      children: [/*#__PURE__*/_jsxDEV(Controller, {\n        control: form.control,\n        name: name,\n        render: ({\n          field\n        }) => {\n          var _errors$name;\n\n          return /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.box,\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              children: /*#__PURE__*/_jsxDEV(RemoveCircleOutlineIcon, {\n                color: \"primary\",\n                onClick: () => {\n                  setValue(field.name, Number.parseInt(field.value) <= 1 ? 1 : Number.parseInt(field.value) - 1);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, { ...field,\n              id: name,\n              type: 'number',\n              disabled: disabled,\n              error: !!hasError,\n              helperText: (_errors$name = errors[name]) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              children: /*#__PURE__*/_jsxDEV(AddCircleOutline, {\n                color: \"primary\",\n                onClick: () => {\n                  setValue(name, Number.parseInt(field.value) ? Number.parseInt(field.value) + 1 : 1);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n        children: (_errors$name2 = errors[name]) === null || _errors$name2 === void 0 ? void 0 : _errors$name2.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(QuantityField, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = QuantityField;\nexport default QuantityField;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuantityField\");","map":{"version":3,"sources":["/Users/mz01-chinh/Desktop/reactjs-base-21-main/src/components/form-control/QuantityField/index.jsx"],"names":["Box","FormHelperText","IconButton","makeStyles","FormControl","OutlinedInput","AddCircleOutline","RemoveCircleOutlineIcon","React","Controller","useStyles","theme","root","box","display","flexFlow","alignItems","maxWidth","QuantityField","props","form","name","label","disabled","formState","errors","setValue","hasError","classes","control","field","Number","parseInt","value","message"],"mappings":"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","sourcesContent":["import { Box, FormHelperText, IconButton, makeStyles } from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport AddCircleOutline from '@material-ui/icons/AddCircleOutline';\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\nimport React from 'react';\nimport { Controller } from \"react-hook-form\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        \n    },\n    box: {\n        display: \"flex\",\n        flexFlow: \"row nowrap\",\n        alignItems: \"center\",\n        maxWidth:\"250px\",\n    }\n}))\n\nfunction QuantityField(props) {\n\n    const { form, name, label, disabled } = props\n    const { formState: { errors }, setValue } = form\n    const hasError = errors[name]\n    const classes = useStyles();\n\n    return (\n        <div>\n            <FormControl error={!!hasError} variant=\"outlined\" margin=\"normal\" fullWidth size=\"small\">\n                <Controller\n                    control={form.control}\n                    name={name}\n                    render={({ field }) => (\n                        <Box className={classes.box}>\n                            <IconButton>\n                                <RemoveCircleOutlineIcon color=\"primary\" onClick={() => {\n                                    setValue(field.name, Number.parseInt(field.value)<=1 ? 1: Number.parseInt(field.value) - 1)\n                                }} />\n                            </IconButton>\n                            <OutlinedInput\n                                {...field}\n                                id={name}\n                                type={'number'}\n                                disabled={disabled}\n                                error={!!hasError}\n                                helperText={errors[name]?.message}\n                            />\n                            <IconButton>\n                                <AddCircleOutline color=\"primary\" onClick={() => {\n                                    setValue(name, Number.parseInt(field.value) ? Number.parseInt(field.value) + 1: 1)\n                                }} />\n                            </IconButton>\n                        </Box>\n                    )}\n                />\n                <FormHelperText>\n                    {errors[name]?.message}\n                </FormHelperText>\n            </FormControl>\n        </div>\n    );\n}\n\nexport default QuantityField;"]},"metadata":{},"sourceType":"module"}