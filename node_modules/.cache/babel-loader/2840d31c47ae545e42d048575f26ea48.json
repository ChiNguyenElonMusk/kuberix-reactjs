{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst CartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    showMiniCart: false,\n    cartItems: []\n  },\n  reducers: {\n    showMiniCart(state, action) {\n      state.showMiniCart = true;\n    },\n\n    hideMiniCart(state, action) {\n      state.showMiniCart = false;\n    },\n\n    addToCart(state, action) {\n      //newItem ={id, product, quantity}\n      const newItem = action.payload;\n      const index = state.cartItems.findIndex(item => item.id === newItem.id);\n\n      if (index >= 0) {\n        state.cartItems[index].quantity += newItem.quantity;\n      } else {\n        state.cartItems.push(newItem);\n      }\n    },\n\n    setQuantity(state, action) {\n      const {\n        id,\n        quantity\n      } = action.payload; //check is product is availble in cart\n\n      const index = state.cartItems.findIndex(item => item.id === id);\n\n      if (index >= 0) {\n        state.cartItems[index].quantity = quantity;\n      }\n    },\n\n    removeFromCart(state, action) {\n      const idNeedToRemove = action.payload;\n      state.cartItems = state.cartItems.filter(item => item.id !== idNeedToRemove);\n    }\n\n  }\n});\nconst {\n  actions,\n  reducer\n} = CartSlice;\nexport const {\n  showMiniCart,\n  hideMiniCart,\n  addToCart,\n  setQuantity,\n  removeFromCart\n} = actions;\nexport default reducer;","map":{"version":3,"sources":["/Users/mz01-chinh/Desktop/reactjs-base-21-main/src/features/Cart/CartSlice.js"],"names":["createSlice","CartSlice","name","initialState","showMiniCart","cartItems","reducers","state","action","hideMiniCart","addToCart","newItem","payload","index","findIndex","item","id","quantity","push","setQuantity","removeFromCart","idNeedToRemove","filter","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAGA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC1BE,EAAAA,IAAI,EAAE,MADoB;AAE1BC,EAAAA,YAAY,EAAE;AACVC,IAAAA,YAAY,EAAE,KADJ;AAEVC,IAAAA,SAAS,EAAE;AAFD,GAFY;AAM1BC,EAAAA,QAAQ,EAAE;AACNF,IAAAA,YAAY,CAACG,KAAD,EAAQC,MAAR,EAAgB;AACxBD,MAAAA,KAAK,CAACH,YAAN,GAAqB,IAArB;AACH,KAHK;;AAINK,IAAAA,YAAY,CAACF,KAAD,EAAQC,MAAR,EAAgB;AACxBD,MAAAA,KAAK,CAACH,YAAN,GAAqB,KAArB;AACH,KANK;;AAONM,IAAAA,SAAS,CAACH,KAAD,EAAQC,MAAR,EAAe;AACpB;AACA,YAAMG,OAAO,GAAIH,MAAM,CAACI,OAAxB;AACA,YAAMC,KAAK,GAAGN,KAAK,CAACF,SAAN,CAAgBS,SAAhB,CAA0BC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EAAtD,CAAd;;AACA,UAAGH,KAAK,IAAG,CAAX,EAAa;AACTN,QAAAA,KAAK,CAACF,SAAN,CAAgBQ,KAAhB,EAAuBI,QAAvB,IAAmCN,OAAO,CAACM,QAA3C;AACH,OAFD,MAEK;AACDV,QAAAA,KAAK,CAACF,SAAN,CAAgBa,IAAhB,CAAqBP,OAArB;AACH;AACJ,KAhBK;;AAiBNQ,IAAAA,WAAW,CAACZ,KAAD,EAAQC,MAAR,EAAe;AACtB,YAAM;AAAEQ,QAAAA,EAAF;AAAMC,QAAAA;AAAN,UAAkBT,MAAM,CAACI,OAA/B,CADsB,CAEtB;;AACA,YAAMC,KAAK,GAAGN,KAAK,CAACF,SAAN,CAAgBS,SAAhB,CAA0BC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAA9C,CAAd;;AACA,UAAGH,KAAK,IAAI,CAAZ,EAAe;AACXN,QAAAA,KAAK,CAACF,SAAN,CAAgBQ,KAAhB,EAAuBI,QAAvB,GAAkCA,QAAlC;AACH;AACJ,KAxBK;;AAyBNG,IAAAA,cAAc,CAACb,KAAD,EAAQC,MAAR,EAAe;AACzB,YAAMa,cAAc,GAAGb,MAAM,CAACI,OAA9B;AACAL,MAAAA,KAAK,CAACF,SAAN,GAAkBE,KAAK,CAACF,SAAN,CAAgBiB,MAAhB,CAAwBP,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYK,cAA7C,CAAlB;AACH;;AA5BK;AANgB,CAAD,CAA7B;AAsCA,MAAM;AAAEE,EAAAA,OAAF;AAAWC,EAAAA;AAAX,IAAuBvB,SAA7B;AACA,OAAO,MAAM;AAAEG,EAAAA,YAAF;AAAgBK,EAAAA,YAAhB;AAA8BC,EAAAA,SAA9B;AAAyCS,EAAAA,WAAzC;AAAsDC,EAAAA;AAAtD,IAAyEG,OAA/E;AACP,eAAeC,OAAf","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\n\nconst CartSlice = createSlice({\n    name: 'cart',\n    initialState: {\n        showMiniCart: false,\n        cartItems: [],\n    },\n    reducers: {\n        showMiniCart(state, action) {\n            state.showMiniCart = true;\n        },\n        hideMiniCart(state, action) {\n            state.showMiniCart = false;\n        },\n        addToCart(state, action){\n            //newItem ={id, product, quantity}\n            const newItem  = action.payload;\n            const index = state.cartItems.findIndex(item => item.id === newItem.id);\n            if(index >=0){\n                state.cartItems[index].quantity += newItem.quantity;\n            }else{\n                state.cartItems.push(newItem);\n            }\n        },\n        setQuantity(state, action){\n            const { id, quantity} = action.payload;\n            //check is product is availble in cart\n            const index = state.cartItems.findIndex(item => item.id === id);\n            if(index >= 0) {\n                state.cartItems[index].quantity = quantity;\n            }\n        },\n        removeFromCart(state, action){\n            const idNeedToRemove = action.payload;\n            state.cartItems = state.cartItems.filter((item) => item.id !== idNeedToRemove)\n        },\n    }\n})\n\nconst { actions, reducer } = CartSlice\nexport const { showMiniCart, hideMiniCart, addToCart, setQuantity, removeFromCart } = actions\nexport default reducer\n\n"]},"metadata":{},"sourceType":"module"}